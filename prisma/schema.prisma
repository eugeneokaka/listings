// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(cuid())
  clerkId     String   @unique 
  firstname        String?
  lastname        String?
  email       String     @unique
  image       String?
  role        Role       @default(USER)
  verified    Boolean    @default(false)
  createdAt   DateTime   @default(now())
  listings    Listing[]  // Only used by landlords
  favorites   Favorite[] // Saved listings by normal users
  comments    Comment[]
}

model Listing {
  id          String        @id @default(cuid())
  title       String
  description String
  category    ListingCategory // RENTAL or BNB
  price       Float
  area        String
  location    String
  mapUrl      String?
  amenities   String[]
  images      Image[]
  comments    Comment[]
  views       Int           @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ownerId     String
  owner       User          @relation(fields: [ownerId], references: [id])
  favorites   Favorite[]
}

model Image {
  id        String   @id @default(cuid())
  url       String
  listingId String
  listing   Listing  @relation(fields: [listingId], references: [id])
  createdAt DateTime @default(now())
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  authorId  String?  // optional if anonymous
  listingId String
  author    User?    @relation(fields: [authorId], references: [id])
  listing   Listing  @relation(fields: [listingId], references: [id])
  createdAt DateTime @default(now())
}

model Favorite {
  id        String   @id @default(cuid())
  userId    String
  listingId String
  user      User     @relation(fields: [userId], references: [id])
  listing   Listing  @relation(fields: [listingId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, listingId]) // prevent duplicate favorites
}

enum Role {
  USER
  LANDLORD
  ADMIN
}

enum ListingCategory {
  RENTAL
  BNB
}
